# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.31
#
# Don't modify this file, modify the SWIG interface instead.
# This file is compatible with both classic and new-style classes.

import _component
import new
new_instancemethod = new.instancemethod
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'PySwigObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError,name

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

import types
try:
    _object = types.ObjectType
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0
del types


import _component as cppModule

import core
BB_X_AXIS = _component.BB_X_AXIS
BB_Y_AXIS = _component.BB_Y_AXIS
AXIS_LOW = _component.AXIS_LOW
AXIS_HIGH = _component.AXIS_HIGH
AXIS_BOTH = _component.AXIS_BOTH
AXIS_NULL = _component.AXIS_NULL
AXIS_CENTER_ALIGN = _component.AXIS_CENTER_ALIGN
AXIS_LEFT_ALIGN = _component.AXIS_LEFT_ALIGN
AXIS_RIGHT_ALIGN = _component.AXIS_RIGHT_ALIGN
BB_NONE = _component.BB_NONE
BB_DASHED = _component.BB_DASHED
BB_SOLID = _component.BB_SOLID
class VisusBorderAxis(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, VisusBorderAxis, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, VisusBorderAxis, name)
    __repr__ = _swig_repr
    __swig_setmethods__["XML_TAG"] = _component.VisusBorderAxis_XML_TAG_set
    __swig_getmethods__["XML_TAG"] = _component.VisusBorderAxis_XML_TAG_get
    if _newclass:XML_TAG = _swig_property(_component.VisusBorderAxis_XML_TAG_get, _component.VisusBorderAxis_XML_TAG_set)
    def __init__(self, *args): 
        this = _component.new_VisusBorderAxis(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _component.delete_VisusBorderAxis
    __del__ = lambda self : None;
    def enable(*args): return _component.VisusBorderAxis_enable(*args)
    def disable(*args): return _component.VisusBorderAxis_disable(*args)
    def drawLegend(*args): return _component.VisusBorderAxis_drawLegend(*args)
    def legendOrientation(*args): return _component.VisusBorderAxis_legendOrientation(*args)
    def legendText(*args): return _component.VisusBorderAxis_legendText(*args)
    def legendFont(*args): return _component.VisusBorderAxis_legendFont(*args)
    def legendPosition(*args): return _component.VisusBorderAxis_legendPosition(*args)
    def legendAlignment(*args): return _component.VisusBorderAxis_legendAlignment(*args)
    def legendOffset(*args): return _component.VisusBorderAxis_legendOffset(*args)
    def drawLabels(*args): return _component.VisusBorderAxis_drawLabels(*args)
    def labelText(*args): return _component.VisusBorderAxis_labelText(*args)
    def labelFont(*args): return _component.VisusBorderAxis_labelFont(*args)
    def labelPosition(*args): return _component.VisusBorderAxis_labelPosition(*args)
    def labelOrientation(*args): return _component.VisusBorderAxis_labelOrientation(*args)
    def labelAlignment(*args): return _component.VisusBorderAxis_labelAlignment(*args)
    def labelOffset(*args): return _component.VisusBorderAxis_labelOffset(*args)
    def tickLabels(*args): return _component.VisusBorderAxis_tickLabels(*args)
    def hasTickLabels(*args): return _component.VisusBorderAxis_hasTickLabels(*args)
    def drawTicks(*args): return _component.VisusBorderAxis_drawTicks(*args)
    def majorTickLength(*args): return _component.VisusBorderAxis_majorTickLength(*args)
    def majorTickThickness(*args): return _component.VisusBorderAxis_majorTickThickness(*args)
    def minorTickLength(*args): return _component.VisusBorderAxis_minorTickLength(*args)
    def minorTickThickness(*args): return _component.VisusBorderAxis_minorTickThickness(*args)
    def tickPosition(*args): return _component.VisusBorderAxis_tickPosition(*args)
    def minValue(*args): return _component.VisusBorderAxis_minValue(*args)
    def maxValue(*args): return _component.VisusBorderAxis_maxValue(*args)
    def majorTicks(*args): return _component.VisusBorderAxis_majorTicks(*args)
    def minorTicks(*args): return _component.VisusBorderAxis_minorTicks(*args)
    def tickColor(*args): return _component.VisusBorderAxis_tickColor(*args)
    def getDrawBox(*args): return _component.VisusBorderAxis_getDrawBox(*args)
    def renderTickMarks(*args): return _component.VisusBorderAxis_renderTickMarks(*args)
    def renderLabels(*args): return _component.VisusBorderAxis_renderLabels(*args)
    def renderLegend(*args): return _component.VisusBorderAxis_renderLegend(*args)
    def assign(*args): return _component.VisusBorderAxis_assign(*args)
VisusBorderAxis_swigregister = _component.VisusBorderAxis_swigregister
VisusBorderAxis_swigregister(VisusBorderAxis)
cvar = _component.cvar

BB_HORIZONTAL = _component.BB_HORIZONTAL
BB_VERTICAL = _component.BB_VERTICAL
class VisusBorderBox2D(core.VisusGroup):
    __swig_setmethods__ = {}
    for _s in [core.VisusGroup]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, VisusBorderBox2D, name, value)
    __swig_getmethods__ = {}
    for _s in [core.VisusGroup]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, VisusBorderBox2D, name)
    def __init__(self): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def orientation(*args): return _component.VisusBorderBox2D_orientation(*args)
    def position(*args): return _component.VisusBorderBox2D_position(*args)
    def axis(*args): return _component.VisusBorderBox2D_axis(*args)
    def rotate(*args): return _component.VisusBorderBox2D_rotate(*args)
    def translate(*args): return _component.VisusBorderBox2D_translate(*args)
    def backgroundColor(*args): return _component.VisusBorderBox2D_backgroundColor(*args)
    def tickLineType(*args): return _component.VisusBorderBox2D_tickLineType(*args)
    def titleText(*args): return _component.VisusBorderBox2D_titleText(*args)
    def titleFont(*args): return _component.VisusBorderBox2D_titleFont(*args)
    def titleAlignment(*args): return _component.VisusBorderBox2D_titleAlignment(*args)
VisusBorderBox2D_swigregister = _component.VisusBorderBox2D_swigregister
VisusBorderBox2D_swigregister(VisusBorderBox2D)

class VisusColorBar(VisusBorderBox2D):
    __swig_setmethods__ = {}
    for _s in [VisusBorderBox2D]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, VisusColorBar, name, value)
    __swig_getmethods__ = {}
    for _s in [VisusBorderBox2D]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, VisusColorBar, name)
    def __init__(self): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def axis(*args): return _component.VisusColorBar_axis(*args)
    def length(*args): return _component.VisusColorBar_length(*args)
    def width(*args): return _component.VisusColorBar_width(*args)
    def displayBoundingBox(*args): return _component.VisusColorBar_displayBoundingBox(*args)
    __swig_getmethods__["construct"] = lambda x: _component.VisusColorBar_construct
    if _newclass:construct = staticmethod(_component.VisusColorBar_construct)
    def nodeType(*args): return _component.VisusColorBar_nodeType(*args)
VisusColorBar_swigregister = _component.VisusColorBar_swigregister
VisusColorBar_swigregister(VisusColorBar)
VisusColorBar_construct = _component.VisusColorBar_construct

class pVisusColorBar(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, pVisusColorBar, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, pVisusColorBar, name)
    def __init__(self): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    __swig_destroy__ = _component.delete_pVisusColorBar
    __del__ = lambda self : None;
    def __eq__(*args): return _component.pVisusColorBar___eq__(*args)
    def __ne__(*args): return _component.pVisusColorBar___ne__(*args)
    def __ref__(*args): return _component.pVisusColorBar___ref__(*args)
    def __deref__(*args): return _component.pVisusColorBar___deref__(*args)
    def getString(*args): return _component.pVisusColorBar_getString(*args)
    def isEmpty(*args): return _component.pVisusColorBar_isEmpty(*args)
    def assign(*args): return _component.pVisusColorBar_assign(*args)
    def axis(*args): return _component.pVisusColorBar_axis(*args)
    def length(*args): return _component.pVisusColorBar_length(*args)
    def width(*args): return _component.pVisusColorBar_width(*args)
    def displayBoundingBox(*args): return _component.pVisusColorBar_displayBoundingBox(*args)
    def construct(*args): return _component.pVisusColorBar_construct(*args)
    def nodeType(*args): return _component.pVisusColorBar_nodeType(*args)
    def orientation(*args): return _component.pVisusColorBar_orientation(*args)
    def position(*args): return _component.pVisusColorBar_position(*args)
    def rotate(*args): return _component.pVisusColorBar_rotate(*args)
    def translate(*args): return _component.pVisusColorBar_translate(*args)
    def backgroundColor(*args): return _component.pVisusColorBar_backgroundColor(*args)
    def tickLineType(*args): return _component.pVisusColorBar_tickLineType(*args)
    def titleText(*args): return _component.pVisusColorBar_titleText(*args)
    def titleFont(*args): return _component.pVisusColorBar_titleFont(*args)
    def titleAlignment(*args): return _component.pVisusColorBar_titleAlignment(*args)
    __swig_setmethods__["XML_TAG"] = _component.pVisusColorBar_XML_TAG_set
    __swig_getmethods__["XML_TAG"] = _component.pVisusColorBar_XML_TAG_get
    if _newclass:XML_TAG = _swig_property(_component.pVisusColorBar_XML_TAG_get, _component.pVisusColorBar_XML_TAG_set)
    __swig_getmethods__["sNumTypes"] = _component.pVisusColorBar_sNumTypes_get
    if _newclass:sNumTypes = _swig_property(_component.pVisusColorBar_sNumTypes_get)
    def numTypes(*args): return _component.pVisusColorBar_numTypes(*args)
    def locked(*args): return _component.pVisusColorBar_locked(*args)
    def lockToRead(*args): return _component.pVisusColorBar_lockToRead(*args)
    def unlockAfterRead(*args): return _component.pVisusColorBar_unlockAfterRead(*args)
    def lockToWrite(*args): return _component.pVisusColorBar_lockToWrite(*args)
    def unlockAfterWrite(*args): return _component.pVisusColorBar_unlockAfterWrite(*args)
    __swig_setmethods__["sRenderMode"] = _component.pVisusColorBar_sRenderMode_set
    __swig_getmethods__["sRenderMode"] = _component.pVisusColorBar_sRenderMode_get
    if _newclass:sRenderMode = _swig_property(_component.pVisusColorBar_sRenderMode_get, _component.pVisusColorBar_sRenderMode_set)
    def __and__(*args): return _component.pVisusColorBar___and__(*args)
    def infoString(*args): return _component.pVisusColorBar_infoString(*args)
    def self(*args): return _component.pVisusColorBar_self(*args)
    def parent(*args): return _component.pVisusColorBar_parent(*args)
    def nrOfChildren(*args): return _component.pVisusColorBar_nrOfChildren(*args)
    def child(*args): return _component.pVisusColorBar_child(*args)
    def getChildIndex(*args): return _component.pVisusColorBar_getChildIndex(*args)
    def attachSubTree(*args): return _component.pVisusColorBar_attachSubTree(*args)
    def detachSubTree(*args): return _component.pVisusColorBar_detachSubTree(*args)
    def destroySubTree(*args): return _component.pVisusColorBar_destroySubTree(*args)
    def nextNode(*args): return _component.pVisusColorBar_nextNode(*args)
    def screenShot(*args): return _component.pVisusColorBar_screenShot(*args)
    def type(*args): return _component.pVisusColorBar_type(*args)
    def category(*args): return _component.pVisusColorBar_category(*args)
    def drawBoundingBox(*args): return _component.pVisusColorBar_drawBoundingBox(*args)
    def visible(*args): return _component.pVisusColorBar_visible(*args)
    def hasSharedValue(*args): return _component.pVisusColorBar_hasSharedValue(*args)
    def inherit(*args): return _component.pVisusColorBar_inherit(*args)
    def boundingBoxColor(*args): return _component.pVisusColorBar_boundingBoxColor(*args)
    def markAsDirty(*args): return _component.pVisusColorBar_markAsDirty(*args)
    def readClearDirty(*args): return _component.pVisusColorBar_readClearDirty(*args)
    def isDirty(*args): return _component.pVisusColorBar_isDirty(*args)
    def declareParameter(*args): return _component.pVisusColorBar_declareParameter(*args)
    def propagateUpwards(*args): return _component.pVisusColorBar_propagateUpwards(*args)
    def propagateDownwards(*args): return _component.pVisusColorBar_propagateDownwards(*args)
    def getValue(*args): return _component.pVisusColorBar_getValue(*args)
    def setValue(*args): return _component.pVisusColorBar_setValue(*args)
    def accumulate2D(*args): return _component.pVisusColorBar_accumulate2D(*args)
    def accumulate3D(*args): return _component.pVisusColorBar_accumulate3D(*args)
    def mapToWorldBox(*args): return _component.pVisusColorBar_mapToWorldBox(*args)
    def scale(*args): return _component.pVisusColorBar_scale(*args)
    def freeze(*args): return _component.pVisusColorBar_freeze(*args)
    def unfreeze(*args): return _component.pVisusColorBar_unfreeze(*args)
    def frozen(*args): return _component.pVisusColorBar_frozen(*args)
    def display(*args): return _component.pVisusColorBar_display(*args)
    def validateXML(*args): return _component.pVisusColorBar_validateXML(*args)
pVisusColorBar_swigregister = _component.pVisusColorBar_swigregister
pVisusColorBar_swigregister(pVisusColorBar)

class VisusLabelNode(core.VisusGroup):
    __swig_setmethods__ = {}
    for _s in [core.VisusGroup]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, VisusLabelNode, name, value)
    __swig_getmethods__ = {}
    for _s in [core.VisusGroup]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, VisusLabelNode, name)
    def __init__(self): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def infoString(*args): return _component.VisusLabelNode_infoString(*args)
    def text(*args): return _component.VisusLabelNode_text(*args)
    def position(*args): return _component.VisusLabelNode_position(*args)
    def rotate(*args): return _component.VisusLabelNode_rotate(*args)
    def translate(*args): return _component.VisusLabelNode_translate(*args)
    __swig_getmethods__["construct"] = lambda x: _component.VisusLabelNode_construct
    if _newclass:construct = staticmethod(_component.VisusLabelNode_construct)
    def nodeType(*args): return _component.VisusLabelNode_nodeType(*args)
VisusLabelNode_swigregister = _component.VisusLabelNode_swigregister
VisusLabelNode_swigregister(VisusLabelNode)
VisusLabelNode_construct = _component.VisusLabelNode_construct

class pVisusLabelNode(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, pVisusLabelNode, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, pVisusLabelNode, name)
    def __init__(self): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    __swig_destroy__ = _component.delete_pVisusLabelNode
    __del__ = lambda self : None;
    def __eq__(*args): return _component.pVisusLabelNode___eq__(*args)
    def __ne__(*args): return _component.pVisusLabelNode___ne__(*args)
    def __ref__(*args): return _component.pVisusLabelNode___ref__(*args)
    def __deref__(*args): return _component.pVisusLabelNode___deref__(*args)
    def getString(*args): return _component.pVisusLabelNode_getString(*args)
    def isEmpty(*args): return _component.pVisusLabelNode_isEmpty(*args)
    def assign(*args): return _component.pVisusLabelNode_assign(*args)
    def infoString(*args): return _component.pVisusLabelNode_infoString(*args)
    def text(*args): return _component.pVisusLabelNode_text(*args)
    def position(*args): return _component.pVisusLabelNode_position(*args)
    def rotate(*args): return _component.pVisusLabelNode_rotate(*args)
    def translate(*args): return _component.pVisusLabelNode_translate(*args)
    def construct(*args): return _component.pVisusLabelNode_construct(*args)
    def nodeType(*args): return _component.pVisusLabelNode_nodeType(*args)
    __swig_setmethods__["XML_TAG"] = _component.pVisusLabelNode_XML_TAG_set
    __swig_getmethods__["XML_TAG"] = _component.pVisusLabelNode_XML_TAG_get
    if _newclass:XML_TAG = _swig_property(_component.pVisusLabelNode_XML_TAG_get, _component.pVisusLabelNode_XML_TAG_set)
    __swig_getmethods__["sNumTypes"] = _component.pVisusLabelNode_sNumTypes_get
    if _newclass:sNumTypes = _swig_property(_component.pVisusLabelNode_sNumTypes_get)
    def numTypes(*args): return _component.pVisusLabelNode_numTypes(*args)
    def locked(*args): return _component.pVisusLabelNode_locked(*args)
    def lockToRead(*args): return _component.pVisusLabelNode_lockToRead(*args)
    def unlockAfterRead(*args): return _component.pVisusLabelNode_unlockAfterRead(*args)
    def lockToWrite(*args): return _component.pVisusLabelNode_lockToWrite(*args)
    def unlockAfterWrite(*args): return _component.pVisusLabelNode_unlockAfterWrite(*args)
    __swig_setmethods__["sRenderMode"] = _component.pVisusLabelNode_sRenderMode_set
    __swig_getmethods__["sRenderMode"] = _component.pVisusLabelNode_sRenderMode_get
    if _newclass:sRenderMode = _swig_property(_component.pVisusLabelNode_sRenderMode_get, _component.pVisusLabelNode_sRenderMode_set)
    def __and__(*args): return _component.pVisusLabelNode___and__(*args)
    def self(*args): return _component.pVisusLabelNode_self(*args)
    def parent(*args): return _component.pVisusLabelNode_parent(*args)
    def nrOfChildren(*args): return _component.pVisusLabelNode_nrOfChildren(*args)
    def child(*args): return _component.pVisusLabelNode_child(*args)
    def getChildIndex(*args): return _component.pVisusLabelNode_getChildIndex(*args)
    def attachSubTree(*args): return _component.pVisusLabelNode_attachSubTree(*args)
    def detachSubTree(*args): return _component.pVisusLabelNode_detachSubTree(*args)
    def destroySubTree(*args): return _component.pVisusLabelNode_destroySubTree(*args)
    def nextNode(*args): return _component.pVisusLabelNode_nextNode(*args)
    def screenShot(*args): return _component.pVisusLabelNode_screenShot(*args)
    def type(*args): return _component.pVisusLabelNode_type(*args)
    def category(*args): return _component.pVisusLabelNode_category(*args)
    def drawBoundingBox(*args): return _component.pVisusLabelNode_drawBoundingBox(*args)
    def visible(*args): return _component.pVisusLabelNode_visible(*args)
    def hasSharedValue(*args): return _component.pVisusLabelNode_hasSharedValue(*args)
    def inherit(*args): return _component.pVisusLabelNode_inherit(*args)
    def boundingBoxColor(*args): return _component.pVisusLabelNode_boundingBoxColor(*args)
    def markAsDirty(*args): return _component.pVisusLabelNode_markAsDirty(*args)
    def readClearDirty(*args): return _component.pVisusLabelNode_readClearDirty(*args)
    def isDirty(*args): return _component.pVisusLabelNode_isDirty(*args)
    def declareParameter(*args): return _component.pVisusLabelNode_declareParameter(*args)
    def propagateUpwards(*args): return _component.pVisusLabelNode_propagateUpwards(*args)
    def propagateDownwards(*args): return _component.pVisusLabelNode_propagateDownwards(*args)
    def getValue(*args): return _component.pVisusLabelNode_getValue(*args)
    def setValue(*args): return _component.pVisusLabelNode_setValue(*args)
    def accumulate2D(*args): return _component.pVisusLabelNode_accumulate2D(*args)
    def accumulate3D(*args): return _component.pVisusLabelNode_accumulate3D(*args)
    def mapToWorldBox(*args): return _component.pVisusLabelNode_mapToWorldBox(*args)
    def scale(*args): return _component.pVisusLabelNode_scale(*args)
    def freeze(*args): return _component.pVisusLabelNode_freeze(*args)
    def unfreeze(*args): return _component.pVisusLabelNode_unfreeze(*args)
    def frozen(*args): return _component.pVisusLabelNode_frozen(*args)
    def display(*args): return _component.pVisusLabelNode_display(*args)
    def displayBoundingBox(*args): return _component.pVisusLabelNode_displayBoundingBox(*args)
    def validateXML(*args): return _component.pVisusLabelNode_validateXML(*args)
pVisusLabelNode_swigregister = _component.pVisusLabelNode_swigregister
pVisusLabelNode_swigregister(pVisusLabelNode)

class VisusSceneNode(core.VisusGroup):
    __swig_setmethods__ = {}
    for _s in [core.VisusGroup]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, VisusSceneNode, name, value)
    __swig_getmethods__ = {}
    for _s in [core.VisusGroup]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, VisusSceneNode, name)
    def __init__(self): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def rotate(*args): return _component.VisusSceneNode_rotate(*args)
    def translate(*args): return _component.VisusSceneNode_translate(*args)
    def scale(*args): return _component.VisusSceneNode_scale(*args)
    def rotateJoystick(*args): return _component.VisusSceneNode_rotateJoystick(*args)
    def translateJoystick(*args): return _component.VisusSceneNode_translateJoystick(*args)
    def scaleJoystick(*args): return _component.VisusSceneNode_scaleJoystick(*args)
    def save(*args): return _component.VisusSceneNode_save(*args)
    def load(*args): return _component.VisusSceneNode_load(*args)
    __swig_getmethods__["construct"] = lambda x: _component.VisusSceneNode_construct
    if _newclass:construct = staticmethod(_component.VisusSceneNode_construct)
    def nodeType(*args): return _component.VisusSceneNode_nodeType(*args)
VisusSceneNode_swigregister = _component.VisusSceneNode_swigregister
VisusSceneNode_swigregister(VisusSceneNode)
VisusSceneNode_construct = _component.VisusSceneNode_construct

class pVisusSceneNode(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, pVisusSceneNode, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, pVisusSceneNode, name)
    def __init__(self): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    __swig_destroy__ = _component.delete_pVisusSceneNode
    __del__ = lambda self : None;
    def __eq__(*args): return _component.pVisusSceneNode___eq__(*args)
    def __ne__(*args): return _component.pVisusSceneNode___ne__(*args)
    def __ref__(*args): return _component.pVisusSceneNode___ref__(*args)
    def __deref__(*args): return _component.pVisusSceneNode___deref__(*args)
    def getString(*args): return _component.pVisusSceneNode_getString(*args)
    def isEmpty(*args): return _component.pVisusSceneNode_isEmpty(*args)
    def assign(*args): return _component.pVisusSceneNode_assign(*args)
    def rotate(*args): return _component.pVisusSceneNode_rotate(*args)
    def translate(*args): return _component.pVisusSceneNode_translate(*args)
    def scale(*args): return _component.pVisusSceneNode_scale(*args)
    def rotateJoystick(*args): return _component.pVisusSceneNode_rotateJoystick(*args)
    def translateJoystick(*args): return _component.pVisusSceneNode_translateJoystick(*args)
    def scaleJoystick(*args): return _component.pVisusSceneNode_scaleJoystick(*args)
    def save(*args): return _component.pVisusSceneNode_save(*args)
    def load(*args): return _component.pVisusSceneNode_load(*args)
    def construct(*args): return _component.pVisusSceneNode_construct(*args)
    def nodeType(*args): return _component.pVisusSceneNode_nodeType(*args)
    __swig_setmethods__["XML_TAG"] = _component.pVisusSceneNode_XML_TAG_set
    __swig_getmethods__["XML_TAG"] = _component.pVisusSceneNode_XML_TAG_get
    if _newclass:XML_TAG = _swig_property(_component.pVisusSceneNode_XML_TAG_get, _component.pVisusSceneNode_XML_TAG_set)
    __swig_getmethods__["sNumTypes"] = _component.pVisusSceneNode_sNumTypes_get
    if _newclass:sNumTypes = _swig_property(_component.pVisusSceneNode_sNumTypes_get)
    def numTypes(*args): return _component.pVisusSceneNode_numTypes(*args)
    def locked(*args): return _component.pVisusSceneNode_locked(*args)
    def lockToRead(*args): return _component.pVisusSceneNode_lockToRead(*args)
    def unlockAfterRead(*args): return _component.pVisusSceneNode_unlockAfterRead(*args)
    def lockToWrite(*args): return _component.pVisusSceneNode_lockToWrite(*args)
    def unlockAfterWrite(*args): return _component.pVisusSceneNode_unlockAfterWrite(*args)
    __swig_setmethods__["sRenderMode"] = _component.pVisusSceneNode_sRenderMode_set
    __swig_getmethods__["sRenderMode"] = _component.pVisusSceneNode_sRenderMode_get
    if _newclass:sRenderMode = _swig_property(_component.pVisusSceneNode_sRenderMode_get, _component.pVisusSceneNode_sRenderMode_set)
    def __and__(*args): return _component.pVisusSceneNode___and__(*args)
    def infoString(*args): return _component.pVisusSceneNode_infoString(*args)
    def self(*args): return _component.pVisusSceneNode_self(*args)
    def parent(*args): return _component.pVisusSceneNode_parent(*args)
    def nrOfChildren(*args): return _component.pVisusSceneNode_nrOfChildren(*args)
    def child(*args): return _component.pVisusSceneNode_child(*args)
    def getChildIndex(*args): return _component.pVisusSceneNode_getChildIndex(*args)
    def attachSubTree(*args): return _component.pVisusSceneNode_attachSubTree(*args)
    def detachSubTree(*args): return _component.pVisusSceneNode_detachSubTree(*args)
    def destroySubTree(*args): return _component.pVisusSceneNode_destroySubTree(*args)
    def nextNode(*args): return _component.pVisusSceneNode_nextNode(*args)
    def screenShot(*args): return _component.pVisusSceneNode_screenShot(*args)
    def type(*args): return _component.pVisusSceneNode_type(*args)
    def category(*args): return _component.pVisusSceneNode_category(*args)
    def drawBoundingBox(*args): return _component.pVisusSceneNode_drawBoundingBox(*args)
    def visible(*args): return _component.pVisusSceneNode_visible(*args)
    def hasSharedValue(*args): return _component.pVisusSceneNode_hasSharedValue(*args)
    def inherit(*args): return _component.pVisusSceneNode_inherit(*args)
    def boundingBoxColor(*args): return _component.pVisusSceneNode_boundingBoxColor(*args)
    def markAsDirty(*args): return _component.pVisusSceneNode_markAsDirty(*args)
    def readClearDirty(*args): return _component.pVisusSceneNode_readClearDirty(*args)
    def isDirty(*args): return _component.pVisusSceneNode_isDirty(*args)
    def declareParameter(*args): return _component.pVisusSceneNode_declareParameter(*args)
    def propagateUpwards(*args): return _component.pVisusSceneNode_propagateUpwards(*args)
    def propagateDownwards(*args): return _component.pVisusSceneNode_propagateDownwards(*args)
    def getValue(*args): return _component.pVisusSceneNode_getValue(*args)
    def setValue(*args): return _component.pVisusSceneNode_setValue(*args)
    def accumulate2D(*args): return _component.pVisusSceneNode_accumulate2D(*args)
    def accumulate3D(*args): return _component.pVisusSceneNode_accumulate3D(*args)
    def mapToWorldBox(*args): return _component.pVisusSceneNode_mapToWorldBox(*args)
    def freeze(*args): return _component.pVisusSceneNode_freeze(*args)
    def unfreeze(*args): return _component.pVisusSceneNode_unfreeze(*args)
    def frozen(*args): return _component.pVisusSceneNode_frozen(*args)
    def display(*args): return _component.pVisusSceneNode_display(*args)
    def displayBoundingBox(*args): return _component.pVisusSceneNode_displayBoundingBox(*args)
    def validateXML(*args): return _component.pVisusSceneNode_validateXML(*args)
pVisusSceneNode_swigregister = _component.pVisusSceneNode_swigregister
pVisusSceneNode_swigregister(pVisusSceneNode)

class VisusShapesNode(core.VisusGroup,):
    __swig_setmethods__ = {}
    for _s in [core.VisusGroup,]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, VisusShapesNode, name, value)
    __swig_getmethods__ = {}
    for _s in [core.VisusGroup,]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, VisusShapesNode, name)
    def __init__(self): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    __swig_getmethods__["construct"] = lambda x: _component.VisusShapesNode_construct
    if _newclass:construct = staticmethod(_component.VisusShapesNode_construct)
    def nodeType(*args): return _component.VisusShapesNode_nodeType(*args)
VisusShapesNode_swigregister = _component.VisusShapesNode_swigregister
VisusShapesNode_swigregister(VisusShapesNode)
VisusShapesNode_construct = _component.VisusShapesNode_construct

class pVisusShapesNode(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, pVisusShapesNode, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, pVisusShapesNode, name)
    def __init__(self): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    __swig_destroy__ = _component.delete_pVisusShapesNode
    __del__ = lambda self : None;
    def __eq__(*args): return _component.pVisusShapesNode___eq__(*args)
    def __ne__(*args): return _component.pVisusShapesNode___ne__(*args)
    def __ref__(*args): return _component.pVisusShapesNode___ref__(*args)
    def __deref__(*args): return _component.pVisusShapesNode___deref__(*args)
    def getString(*args): return _component.pVisusShapesNode_getString(*args)
    def isEmpty(*args): return _component.pVisusShapesNode_isEmpty(*args)
    def assign(*args): return _component.pVisusShapesNode_assign(*args)
    def construct(*args): return _component.pVisusShapesNode_construct(*args)
    def nodeType(*args): return _component.pVisusShapesNode_nodeType(*args)
    __swig_setmethods__["XML_TAG"] = _component.pVisusShapesNode_XML_TAG_set
    __swig_getmethods__["XML_TAG"] = _component.pVisusShapesNode_XML_TAG_get
    if _newclass:XML_TAG = _swig_property(_component.pVisusShapesNode_XML_TAG_get, _component.pVisusShapesNode_XML_TAG_set)
    __swig_getmethods__["sNumTypes"] = _component.pVisusShapesNode_sNumTypes_get
    if _newclass:sNumTypes = _swig_property(_component.pVisusShapesNode_sNumTypes_get)
    def numTypes(*args): return _component.pVisusShapesNode_numTypes(*args)
    def locked(*args): return _component.pVisusShapesNode_locked(*args)
    def lockToRead(*args): return _component.pVisusShapesNode_lockToRead(*args)
    def unlockAfterRead(*args): return _component.pVisusShapesNode_unlockAfterRead(*args)
    def lockToWrite(*args): return _component.pVisusShapesNode_lockToWrite(*args)
    def unlockAfterWrite(*args): return _component.pVisusShapesNode_unlockAfterWrite(*args)
    __swig_setmethods__["sRenderMode"] = _component.pVisusShapesNode_sRenderMode_set
    __swig_getmethods__["sRenderMode"] = _component.pVisusShapesNode_sRenderMode_get
    if _newclass:sRenderMode = _swig_property(_component.pVisusShapesNode_sRenderMode_get, _component.pVisusShapesNode_sRenderMode_set)
    def __and__(*args): return _component.pVisusShapesNode___and__(*args)
    def infoString(*args): return _component.pVisusShapesNode_infoString(*args)
    def self(*args): return _component.pVisusShapesNode_self(*args)
    def parent(*args): return _component.pVisusShapesNode_parent(*args)
    def nrOfChildren(*args): return _component.pVisusShapesNode_nrOfChildren(*args)
    def child(*args): return _component.pVisusShapesNode_child(*args)
    def getChildIndex(*args): return _component.pVisusShapesNode_getChildIndex(*args)
    def attachSubTree(*args): return _component.pVisusShapesNode_attachSubTree(*args)
    def detachSubTree(*args): return _component.pVisusShapesNode_detachSubTree(*args)
    def destroySubTree(*args): return _component.pVisusShapesNode_destroySubTree(*args)
    def nextNode(*args): return _component.pVisusShapesNode_nextNode(*args)
    def screenShot(*args): return _component.pVisusShapesNode_screenShot(*args)
    def type(*args): return _component.pVisusShapesNode_type(*args)
    def category(*args): return _component.pVisusShapesNode_category(*args)
    def drawBoundingBox(*args): return _component.pVisusShapesNode_drawBoundingBox(*args)
    def visible(*args): return _component.pVisusShapesNode_visible(*args)
    def hasSharedValue(*args): return _component.pVisusShapesNode_hasSharedValue(*args)
    def inherit(*args): return _component.pVisusShapesNode_inherit(*args)
    def boundingBoxColor(*args): return _component.pVisusShapesNode_boundingBoxColor(*args)
    def markAsDirty(*args): return _component.pVisusShapesNode_markAsDirty(*args)
    def readClearDirty(*args): return _component.pVisusShapesNode_readClearDirty(*args)
    def isDirty(*args): return _component.pVisusShapesNode_isDirty(*args)
    def declareParameter(*args): return _component.pVisusShapesNode_declareParameter(*args)
    def propagateUpwards(*args): return _component.pVisusShapesNode_propagateUpwards(*args)
    def propagateDownwards(*args): return _component.pVisusShapesNode_propagateDownwards(*args)
    def getValue(*args): return _component.pVisusShapesNode_getValue(*args)
    def setValue(*args): return _component.pVisusShapesNode_setValue(*args)
    def accumulate2D(*args): return _component.pVisusShapesNode_accumulate2D(*args)
    def accumulate3D(*args): return _component.pVisusShapesNode_accumulate3D(*args)
    def mapToWorldBox(*args): return _component.pVisusShapesNode_mapToWorldBox(*args)
    def rotate(*args): return _component.pVisusShapesNode_rotate(*args)
    def translate(*args): return _component.pVisusShapesNode_translate(*args)
    def scale(*args): return _component.pVisusShapesNode_scale(*args)
    def freeze(*args): return _component.pVisusShapesNode_freeze(*args)
    def unfreeze(*args): return _component.pVisusShapesNode_unfreeze(*args)
    def frozen(*args): return _component.pVisusShapesNode_frozen(*args)
    def display(*args): return _component.pVisusShapesNode_display(*args)
    def displayBoundingBox(*args): return _component.pVisusShapesNode_displayBoundingBox(*args)
    def validateXML(*args): return _component.pVisusShapesNode_validateXML(*args)
    __swig_setmethods__["NAMES"] = _component.pVisusShapesNode_NAMES_set
    __swig_getmethods__["NAMES"] = _component.pVisusShapesNode_NAMES_get
    if _newclass:NAMES = _swig_property(_component.pVisusShapesNode_NAMES_get, _component.pVisusShapesNode_NAMES_set)
    __swig_setmethods__["ORBIT_FORMAT"] = _component.pVisusShapesNode_ORBIT_FORMAT_set
    __swig_getmethods__["ORBIT_FORMAT"] = _component.pVisusShapesNode_ORBIT_FORMAT_get
    if _newclass:ORBIT_FORMAT = _swig_property(_component.pVisusShapesNode_ORBIT_FORMAT_get, _component.pVisusShapesNode_ORBIT_FORMAT_set)
    __swig_setmethods__["TIMESTEP_FORMAT"] = _component.pVisusShapesNode_TIMESTEP_FORMAT_set
    __swig_getmethods__["TIMESTEP_FORMAT"] = _component.pVisusShapesNode_TIMESTEP_FORMAT_get
    if _newclass:TIMESTEP_FORMAT = _swig_property(_component.pVisusShapesNode_TIMESTEP_FORMAT_get, _component.pVisusShapesNode_TIMESTEP_FORMAT_set)
    __swig_setmethods__["POSITION_FORMAT"] = _component.pVisusShapesNode_POSITION_FORMAT_set
    __swig_getmethods__["POSITION_FORMAT"] = _component.pVisusShapesNode_POSITION_FORMAT_get
    if _newclass:POSITION_FORMAT = _swig_property(_component.pVisusShapesNode_POSITION_FORMAT_get, _component.pVisusShapesNode_POSITION_FORMAT_set)
    __swig_setmethods__["DETECTED_FORMAT"] = _component.pVisusShapesNode_DETECTED_FORMAT_set
    __swig_getmethods__["DETECTED_FORMAT"] = _component.pVisusShapesNode_DETECTED_FORMAT_get
    if _newclass:DETECTED_FORMAT = _swig_property(_component.pVisusShapesNode_DETECTED_FORMAT_get, _component.pVisusShapesNode_DETECTED_FORMAT_set)
    def loadGeometry(*args): return _component.pVisusShapesNode_loadGeometry(*args)
    def loadNames(*args): return _component.pVisusShapesNode_loadNames(*args)
    def loadTimestep(*args): return _component.pVisusShapesNode_loadTimestep(*args)
    def loadBermuda(*args): return _component.pVisusShapesNode_loadBermuda(*args)
    def loadRadarBeam(*args): return _component.pVisusShapesNode_loadRadarBeam(*args)
    def loadOrbit(*args): return _component.pVisusShapesNode_loadOrbit(*args)
    def loadPosition(*args): return _component.pVisusShapesNode_loadPosition(*args)
    def loadDetected(*args): return _component.pVisusShapesNode_loadDetected(*args)
    def setMagnification(*args): return _component.pVisusShapesNode_setMagnification(*args)
    def setFrameNumber(*args): return _component.pVisusShapesNode_setFrameNumber(*args)
    def getFrameNumber(*args): return _component.pVisusShapesNode_getFrameNumber(*args)
    def render(*args): return _component.pVisusShapesNode_render(*args)
    def drawCatalog(*args): return _component.pVisusShapesNode_drawCatalog(*args)
    def drawHubble(*args): return _component.pVisusShapesNode_drawHubble(*args)
    def drawDebris(*args): return _component.pVisusShapesNode_drawDebris(*args)
    def drawStations(*args): return _component.pVisusShapesNode_drawStations(*args)
    def drawBermuda(*args): return _component.pVisusShapesNode_drawBermuda(*args)
    def getTimestepFile(*args): return _component.pVisusShapesNode_getTimestepFile(*args)
pVisusShapesNode_swigregister = _component.pVisusShapesNode_swigregister
pVisusShapesNode_swigregister(pVisusShapesNode)

class VisusSphereNode(core.VisusGroup):
    __swig_setmethods__ = {}
    for _s in [core.VisusGroup]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, VisusSphereNode, name, value)
    __swig_getmethods__ = {}
    for _s in [core.VisusGroup]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, VisusSphereNode, name)
    def __init__(self): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    __swig_getmethods__["construct"] = lambda x: _component.VisusSphereNode_construct
    if _newclass:construct = staticmethod(_component.VisusSphereNode_construct)
    def nodeType(*args): return _component.VisusSphereNode_nodeType(*args)
VisusSphereNode_swigregister = _component.VisusSphereNode_swigregister
VisusSphereNode_swigregister(VisusSphereNode)
VisusSphereNode_construct = _component.VisusSphereNode_construct

class pVisusSphereNode(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, pVisusSphereNode, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, pVisusSphereNode, name)
    def __init__(self): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    __swig_destroy__ = _component.delete_pVisusSphereNode
    __del__ = lambda self : None;
    def __eq__(*args): return _component.pVisusSphereNode___eq__(*args)
    def __ne__(*args): return _component.pVisusSphereNode___ne__(*args)
    def __ref__(*args): return _component.pVisusSphereNode___ref__(*args)
    def __deref__(*args): return _component.pVisusSphereNode___deref__(*args)
    def getString(*args): return _component.pVisusSphereNode_getString(*args)
    def isEmpty(*args): return _component.pVisusSphereNode_isEmpty(*args)
    def assign(*args): return _component.pVisusSphereNode_assign(*args)
    def construct(*args): return _component.pVisusSphereNode_construct(*args)
    def nodeType(*args): return _component.pVisusSphereNode_nodeType(*args)
    __swig_setmethods__["XML_TAG"] = _component.pVisusSphereNode_XML_TAG_set
    __swig_getmethods__["XML_TAG"] = _component.pVisusSphereNode_XML_TAG_get
    if _newclass:XML_TAG = _swig_property(_component.pVisusSphereNode_XML_TAG_get, _component.pVisusSphereNode_XML_TAG_set)
    __swig_getmethods__["sNumTypes"] = _component.pVisusSphereNode_sNumTypes_get
    if _newclass:sNumTypes = _swig_property(_component.pVisusSphereNode_sNumTypes_get)
    def numTypes(*args): return _component.pVisusSphereNode_numTypes(*args)
    def locked(*args): return _component.pVisusSphereNode_locked(*args)
    def lockToRead(*args): return _component.pVisusSphereNode_lockToRead(*args)
    def unlockAfterRead(*args): return _component.pVisusSphereNode_unlockAfterRead(*args)
    def lockToWrite(*args): return _component.pVisusSphereNode_lockToWrite(*args)
    def unlockAfterWrite(*args): return _component.pVisusSphereNode_unlockAfterWrite(*args)
    __swig_setmethods__["sRenderMode"] = _component.pVisusSphereNode_sRenderMode_set
    __swig_getmethods__["sRenderMode"] = _component.pVisusSphereNode_sRenderMode_get
    if _newclass:sRenderMode = _swig_property(_component.pVisusSphereNode_sRenderMode_get, _component.pVisusSphereNode_sRenderMode_set)
    def __and__(*args): return _component.pVisusSphereNode___and__(*args)
    def infoString(*args): return _component.pVisusSphereNode_infoString(*args)
    def self(*args): return _component.pVisusSphereNode_self(*args)
    def parent(*args): return _component.pVisusSphereNode_parent(*args)
    def nrOfChildren(*args): return _component.pVisusSphereNode_nrOfChildren(*args)
    def child(*args): return _component.pVisusSphereNode_child(*args)
    def getChildIndex(*args): return _component.pVisusSphereNode_getChildIndex(*args)
    def attachSubTree(*args): return _component.pVisusSphereNode_attachSubTree(*args)
    def detachSubTree(*args): return _component.pVisusSphereNode_detachSubTree(*args)
    def destroySubTree(*args): return _component.pVisusSphereNode_destroySubTree(*args)
    def nextNode(*args): return _component.pVisusSphereNode_nextNode(*args)
    def screenShot(*args): return _component.pVisusSphereNode_screenShot(*args)
    def type(*args): return _component.pVisusSphereNode_type(*args)
    def category(*args): return _component.pVisusSphereNode_category(*args)
    def drawBoundingBox(*args): return _component.pVisusSphereNode_drawBoundingBox(*args)
    def visible(*args): return _component.pVisusSphereNode_visible(*args)
    def hasSharedValue(*args): return _component.pVisusSphereNode_hasSharedValue(*args)
    def inherit(*args): return _component.pVisusSphereNode_inherit(*args)
    def boundingBoxColor(*args): return _component.pVisusSphereNode_boundingBoxColor(*args)
    def markAsDirty(*args): return _component.pVisusSphereNode_markAsDirty(*args)
    def readClearDirty(*args): return _component.pVisusSphereNode_readClearDirty(*args)
    def isDirty(*args): return _component.pVisusSphereNode_isDirty(*args)
    def declareParameter(*args): return _component.pVisusSphereNode_declareParameter(*args)
    def propagateUpwards(*args): return _component.pVisusSphereNode_propagateUpwards(*args)
    def propagateDownwards(*args): return _component.pVisusSphereNode_propagateDownwards(*args)
    def getValue(*args): return _component.pVisusSphereNode_getValue(*args)
    def setValue(*args): return _component.pVisusSphereNode_setValue(*args)
    def accumulate2D(*args): return _component.pVisusSphereNode_accumulate2D(*args)
    def accumulate3D(*args): return _component.pVisusSphereNode_accumulate3D(*args)
    def mapToWorldBox(*args): return _component.pVisusSphereNode_mapToWorldBox(*args)
    def rotate(*args): return _component.pVisusSphereNode_rotate(*args)
    def translate(*args): return _component.pVisusSphereNode_translate(*args)
    def scale(*args): return _component.pVisusSphereNode_scale(*args)
    def freeze(*args): return _component.pVisusSphereNode_freeze(*args)
    def unfreeze(*args): return _component.pVisusSphereNode_unfreeze(*args)
    def frozen(*args): return _component.pVisusSphereNode_frozen(*args)
    def display(*args): return _component.pVisusSphereNode_display(*args)
    def displayBoundingBox(*args): return _component.pVisusSphereNode_displayBoundingBox(*args)
    def validateXML(*args): return _component.pVisusSphereNode_validateXML(*args)
pVisusSphereNode_swigregister = _component.pVisusSphereNode_swigregister
pVisusSphereNode_swigregister(pVisusSphereNode)

class VisusTextNode(core.VisusGroup,core.VisusText):
    __swig_setmethods__ = {}
    for _s in [core.VisusGroup,core.VisusText]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, VisusTextNode, name, value)
    __swig_getmethods__ = {}
    for _s in [core.VisusGroup,core.VisusText]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, VisusTextNode, name)
    def __init__(self): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def setPosition(*args): return _component.VisusTextNode_setPosition(*args)
    def rotate(*args): return _component.VisusTextNode_rotate(*args)
    def translate(*args): return _component.VisusTextNode_translate(*args)
    __swig_getmethods__["construct"] = lambda x: _component.VisusTextNode_construct
    if _newclass:construct = staticmethod(_component.VisusTextNode_construct)
    def nodeType(*args): return _component.VisusTextNode_nodeType(*args)
VisusTextNode_swigregister = _component.VisusTextNode_swigregister
VisusTextNode_swigregister(VisusTextNode)
VisusTextNode_construct = _component.VisusTextNode_construct

class pVisusTextNode(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, pVisusTextNode, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, pVisusTextNode, name)
    def __init__(self): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    __swig_destroy__ = _component.delete_pVisusTextNode
    __del__ = lambda self : None;
    def __eq__(*args): return _component.pVisusTextNode___eq__(*args)
    def __ne__(*args): return _component.pVisusTextNode___ne__(*args)
    def __ref__(*args): return _component.pVisusTextNode___ref__(*args)
    def __deref__(*args): return _component.pVisusTextNode___deref__(*args)
    def getString(*args): return _component.pVisusTextNode_getString(*args)
    def isEmpty(*args): return _component.pVisusTextNode_isEmpty(*args)
    def assign(*args): return _component.pVisusTextNode_assign(*args)
    def setPosition(*args): return _component.pVisusTextNode_setPosition(*args)
    def rotate(*args): return _component.pVisusTextNode_rotate(*args)
    def translate(*args): return _component.pVisusTextNode_translate(*args)
    def construct(*args): return _component.pVisusTextNode_construct(*args)
    def nodeType(*args): return _component.pVisusTextNode_nodeType(*args)
    __swig_setmethods__["XML_TAG"] = _component.pVisusTextNode_XML_TAG_set
    __swig_getmethods__["XML_TAG"] = _component.pVisusTextNode_XML_TAG_get
    if _newclass:XML_TAG = _swig_property(_component.pVisusTextNode_XML_TAG_get, _component.pVisusTextNode_XML_TAG_set)
    __swig_getmethods__["sNumTypes"] = _component.pVisusTextNode_sNumTypes_get
    if _newclass:sNumTypes = _swig_property(_component.pVisusTextNode_sNumTypes_get)
    def numTypes(*args): return _component.pVisusTextNode_numTypes(*args)
    def locked(*args): return _component.pVisusTextNode_locked(*args)
    def lockToRead(*args): return _component.pVisusTextNode_lockToRead(*args)
    def unlockAfterRead(*args): return _component.pVisusTextNode_unlockAfterRead(*args)
    def lockToWrite(*args): return _component.pVisusTextNode_lockToWrite(*args)
    def unlockAfterWrite(*args): return _component.pVisusTextNode_unlockAfterWrite(*args)
    __swig_setmethods__["sRenderMode"] = _component.pVisusTextNode_sRenderMode_set
    __swig_getmethods__["sRenderMode"] = _component.pVisusTextNode_sRenderMode_get
    if _newclass:sRenderMode = _swig_property(_component.pVisusTextNode_sRenderMode_get, _component.pVisusTextNode_sRenderMode_set)
    def __and__(*args): return _component.pVisusTextNode___and__(*args)
    def infoString(*args): return _component.pVisusTextNode_infoString(*args)
    def self(*args): return _component.pVisusTextNode_self(*args)
    def parent(*args): return _component.pVisusTextNode_parent(*args)
    def nrOfChildren(*args): return _component.pVisusTextNode_nrOfChildren(*args)
    def child(*args): return _component.pVisusTextNode_child(*args)
    def getChildIndex(*args): return _component.pVisusTextNode_getChildIndex(*args)
    def attachSubTree(*args): return _component.pVisusTextNode_attachSubTree(*args)
    def detachSubTree(*args): return _component.pVisusTextNode_detachSubTree(*args)
    def destroySubTree(*args): return _component.pVisusTextNode_destroySubTree(*args)
    def nextNode(*args): return _component.pVisusTextNode_nextNode(*args)
    def screenShot(*args): return _component.pVisusTextNode_screenShot(*args)
    def type(*args): return _component.pVisusTextNode_type(*args)
    def category(*args): return _component.pVisusTextNode_category(*args)
    def drawBoundingBox(*args): return _component.pVisusTextNode_drawBoundingBox(*args)
    def visible(*args): return _component.pVisusTextNode_visible(*args)
    def hasSharedValue(*args): return _component.pVisusTextNode_hasSharedValue(*args)
    def inherit(*args): return _component.pVisusTextNode_inherit(*args)
    def boundingBoxColor(*args): return _component.pVisusTextNode_boundingBoxColor(*args)
    def markAsDirty(*args): return _component.pVisusTextNode_markAsDirty(*args)
    def readClearDirty(*args): return _component.pVisusTextNode_readClearDirty(*args)
    def isDirty(*args): return _component.pVisusTextNode_isDirty(*args)
    def declareParameter(*args): return _component.pVisusTextNode_declareParameter(*args)
    def propagateUpwards(*args): return _component.pVisusTextNode_propagateUpwards(*args)
    def propagateDownwards(*args): return _component.pVisusTextNode_propagateDownwards(*args)
    def getValue(*args): return _component.pVisusTextNode_getValue(*args)
    def setValue(*args): return _component.pVisusTextNode_setValue(*args)
    def accumulate2D(*args): return _component.pVisusTextNode_accumulate2D(*args)
    def accumulate3D(*args): return _component.pVisusTextNode_accumulate3D(*args)
    def mapToWorldBox(*args): return _component.pVisusTextNode_mapToWorldBox(*args)
    def scale(*args): return _component.pVisusTextNode_scale(*args)
    def freeze(*args): return _component.pVisusTextNode_freeze(*args)
    def unfreeze(*args): return _component.pVisusTextNode_unfreeze(*args)
    def frozen(*args): return _component.pVisusTextNode_frozen(*args)
    def display(*args): return _component.pVisusTextNode_display(*args)
    def displayBoundingBox(*args): return _component.pVisusTextNode_displayBoundingBox(*args)
    def validateXML(*args): return _component.pVisusTextNode_validateXML(*args)
    def text(*args): return _component.pVisusTextNode_text(*args)
    def font(*args): return _component.pVisusTextNode_font(*args)
    def orientation(*args): return _component.pVisusTextNode_orientation(*args)
    def bbox(*args): return _component.pVisusTextNode_bbox(*args)
    def render(*args): return _component.pVisusTextNode_render(*args)
pVisusTextNode_swigregister = _component.pVisusTextNode_swigregister
pVisusTextNode_swigregister(pVisusTextNode)

TM_X_AXIS = _component.TM_X_AXIS
TM_Y_AXIS = _component.TM_Y_AXIS
TM_Z_AXIS = _component.TM_Z_AXIS
class VisusTickMarks(core.VisusGroup):
    __swig_setmethods__ = {}
    for _s in [core.VisusGroup]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, VisusTickMarks, name, value)
    __swig_getmethods__ = {}
    for _s in [core.VisusGroup]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, VisusTickMarks, name)
    def __init__(self): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    def infoString(*args): return _component.VisusTickMarks_infoString(*args)
    def direction(*args): return _component.VisusTickMarks_direction(*args)
    def axis(*args): return _component.VisusTickMarks_axis(*args)
    def displayBoundingBox(*args): return _component.VisusTickMarks_displayBoundingBox(*args)
    __swig_getmethods__["construct"] = lambda x: _component.VisusTickMarks_construct
    if _newclass:construct = staticmethod(_component.VisusTickMarks_construct)
    def nodeType(*args): return _component.VisusTickMarks_nodeType(*args)
VisusTickMarks_swigregister = _component.VisusTickMarks_swigregister
VisusTickMarks_swigregister(VisusTickMarks)
VisusTickMarks_construct = _component.VisusTickMarks_construct

class pVisusTickMarks(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, pVisusTickMarks, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, pVisusTickMarks, name)
    def __init__(self): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    __swig_destroy__ = _component.delete_pVisusTickMarks
    __del__ = lambda self : None;
    def __eq__(*args): return _component.pVisusTickMarks___eq__(*args)
    def __ne__(*args): return _component.pVisusTickMarks___ne__(*args)
    def __ref__(*args): return _component.pVisusTickMarks___ref__(*args)
    def __deref__(*args): return _component.pVisusTickMarks___deref__(*args)
    def getString(*args): return _component.pVisusTickMarks_getString(*args)
    def isEmpty(*args): return _component.pVisusTickMarks_isEmpty(*args)
    def assign(*args): return _component.pVisusTickMarks_assign(*args)
    def infoString(*args): return _component.pVisusTickMarks_infoString(*args)
    def direction(*args): return _component.pVisusTickMarks_direction(*args)
    def axis(*args): return _component.pVisusTickMarks_axis(*args)
    def displayBoundingBox(*args): return _component.pVisusTickMarks_displayBoundingBox(*args)
    def construct(*args): return _component.pVisusTickMarks_construct(*args)
    def nodeType(*args): return _component.pVisusTickMarks_nodeType(*args)
    __swig_setmethods__["XML_TAG"] = _component.pVisusTickMarks_XML_TAG_set
    __swig_getmethods__["XML_TAG"] = _component.pVisusTickMarks_XML_TAG_get
    if _newclass:XML_TAG = _swig_property(_component.pVisusTickMarks_XML_TAG_get, _component.pVisusTickMarks_XML_TAG_set)
    __swig_getmethods__["sNumTypes"] = _component.pVisusTickMarks_sNumTypes_get
    if _newclass:sNumTypes = _swig_property(_component.pVisusTickMarks_sNumTypes_get)
    def numTypes(*args): return _component.pVisusTickMarks_numTypes(*args)
    def locked(*args): return _component.pVisusTickMarks_locked(*args)
    def lockToRead(*args): return _component.pVisusTickMarks_lockToRead(*args)
    def unlockAfterRead(*args): return _component.pVisusTickMarks_unlockAfterRead(*args)
    def lockToWrite(*args): return _component.pVisusTickMarks_lockToWrite(*args)
    def unlockAfterWrite(*args): return _component.pVisusTickMarks_unlockAfterWrite(*args)
    __swig_setmethods__["sRenderMode"] = _component.pVisusTickMarks_sRenderMode_set
    __swig_getmethods__["sRenderMode"] = _component.pVisusTickMarks_sRenderMode_get
    if _newclass:sRenderMode = _swig_property(_component.pVisusTickMarks_sRenderMode_get, _component.pVisusTickMarks_sRenderMode_set)
    def __and__(*args): return _component.pVisusTickMarks___and__(*args)
    def self(*args): return _component.pVisusTickMarks_self(*args)
    def parent(*args): return _component.pVisusTickMarks_parent(*args)
    def nrOfChildren(*args): return _component.pVisusTickMarks_nrOfChildren(*args)
    def child(*args): return _component.pVisusTickMarks_child(*args)
    def getChildIndex(*args): return _component.pVisusTickMarks_getChildIndex(*args)
    def attachSubTree(*args): return _component.pVisusTickMarks_attachSubTree(*args)
    def detachSubTree(*args): return _component.pVisusTickMarks_detachSubTree(*args)
    def destroySubTree(*args): return _component.pVisusTickMarks_destroySubTree(*args)
    def nextNode(*args): return _component.pVisusTickMarks_nextNode(*args)
    def screenShot(*args): return _component.pVisusTickMarks_screenShot(*args)
    def type(*args): return _component.pVisusTickMarks_type(*args)
    def category(*args): return _component.pVisusTickMarks_category(*args)
    def drawBoundingBox(*args): return _component.pVisusTickMarks_drawBoundingBox(*args)
    def visible(*args): return _component.pVisusTickMarks_visible(*args)
    def hasSharedValue(*args): return _component.pVisusTickMarks_hasSharedValue(*args)
    def inherit(*args): return _component.pVisusTickMarks_inherit(*args)
    def boundingBoxColor(*args): return _component.pVisusTickMarks_boundingBoxColor(*args)
    def markAsDirty(*args): return _component.pVisusTickMarks_markAsDirty(*args)
    def readClearDirty(*args): return _component.pVisusTickMarks_readClearDirty(*args)
    def isDirty(*args): return _component.pVisusTickMarks_isDirty(*args)
    def declareParameter(*args): return _component.pVisusTickMarks_declareParameter(*args)
    def propagateUpwards(*args): return _component.pVisusTickMarks_propagateUpwards(*args)
    def propagateDownwards(*args): return _component.pVisusTickMarks_propagateDownwards(*args)
    def getValue(*args): return _component.pVisusTickMarks_getValue(*args)
    def setValue(*args): return _component.pVisusTickMarks_setValue(*args)
    def accumulate2D(*args): return _component.pVisusTickMarks_accumulate2D(*args)
    def accumulate3D(*args): return _component.pVisusTickMarks_accumulate3D(*args)
    def mapToWorldBox(*args): return _component.pVisusTickMarks_mapToWorldBox(*args)
    def rotate(*args): return _component.pVisusTickMarks_rotate(*args)
    def translate(*args): return _component.pVisusTickMarks_translate(*args)
    def scale(*args): return _component.pVisusTickMarks_scale(*args)
    def freeze(*args): return _component.pVisusTickMarks_freeze(*args)
    def unfreeze(*args): return _component.pVisusTickMarks_unfreeze(*args)
    def frozen(*args): return _component.pVisusTickMarks_frozen(*args)
    def display(*args): return _component.pVisusTickMarks_display(*args)
    def validateXML(*args): return _component.pVisusTickMarks_validateXML(*args)
pVisusTickMarks_swigregister = _component.pVisusTickMarks_swigregister
pVisusTickMarks_swigregister(pVisusTickMarks)



