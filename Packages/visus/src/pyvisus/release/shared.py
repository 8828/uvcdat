# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.31
#
# Don't modify this file, modify the SWIG interface instead.
# This file is compatible with both classic and new-style classes.

import _shared
import new
new_instancemethod = new.instancemethod
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'PySwigObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError,name

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

import types
try:
    _object = types.ObjectType
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0
del types


import _shared as cppModule

import core
UPDATE_THE_CHILDREN = _shared.UPDATE_THE_CHILDREN
SYNC_WITH_CHILDREN = _shared.SYNC_WITH_CHILDREN
UPDATE_THE_PARENT = _shared.UPDATE_THE_PARENT
SYNC_WITH_PARENT = _shared.SYNC_WITH_PARENT
class VisusSharedValue(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, VisusSharedValue, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, VisusSharedValue, name)
    __repr__ = _swig_repr
    sNumTypes = _shared.VisusSharedValue_sNumTypes
    __swig_getmethods__["numTypes"] = lambda x: _shared.VisusSharedValue_numTypes
    if _newclass:numTypes = staticmethod(_shared.VisusSharedValue_numTypes)
    __swig_getmethods__["dummySharedValue"] = lambda x: _shared.VisusSharedValue_dummySharedValue
    if _newclass:dummySharedValue = staticmethod(_shared.VisusSharedValue_dummySharedValue)
    def __init__(self, *args): 
        this = _shared.new_VisusSharedValue(*args)
        try: self.this.append(this)
        except: self.this = this
    def clone(*args): return _shared.VisusSharedValue_clone(*args)
    __swig_destroy__ = _shared.delete_VisusSharedValue
    __del__ = lambda self : None;
    def getName(*args): return _shared.VisusSharedValue_getName(*args)
    def getIndex(*args): return _shared.VisusSharedValue_getIndex(*args)
    def getString(*args): return _shared.VisusSharedValue_getString(*args)
    def inheritsByDefault(*args): return _shared.VisusSharedValue_inheritsByDefault(*args)
    def lockToRead(*args): return _shared.VisusSharedValue_lockToRead(*args)
    def unlockAfterRead(*args): return _shared.VisusSharedValue_unlockAfterRead(*args)
    def lockToWrite(*args): return _shared.VisusSharedValue_lockToWrite(*args)
    def unlockAfterWrite(*args): return _shared.VisusSharedValue_unlockAfterWrite(*args)
    def nSteps(*args): return _shared.VisusSharedValue_nSteps(*args)
    def theSteps(*args): return _shared.VisusSharedValue_theSteps(*args)
    def syncWithParent(*args): return _shared.VisusSharedValue_syncWithParent(*args)
    def syncWithChild(*args): return _shared.VisusSharedValue_syncWithChild(*args)
VisusSharedValue_swigregister = _shared.VisusSharedValue_swigregister
VisusSharedValue_swigregister(VisusSharedValue)
VisusSharedValue_numTypes = _shared.VisusSharedValue_numTypes
VisusSharedValue_dummySharedValue = _shared.VisusSharedValue_dummySharedValue

class pVisusSharedValue(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, pVisusSharedValue, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, pVisusSharedValue, name)
    def __init__(self): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    __swig_destroy__ = _shared.delete_pVisusSharedValue
    __del__ = lambda self : None;
    def __eq__(*args): return _shared.pVisusSharedValue___eq__(*args)
    def __ne__(*args): return _shared.pVisusSharedValue___ne__(*args)
    def __ref__(*args): return _shared.pVisusSharedValue___ref__(*args)
    def __deref__(*args): return _shared.pVisusSharedValue___deref__(*args)
    def getString(*args): return _shared.pVisusSharedValue_getString(*args)
    def isEmpty(*args): return _shared.pVisusSharedValue_isEmpty(*args)
    def assign(*args): return _shared.pVisusSharedValue_assign(*args)
    __swig_getmethods__["sNumTypes"] = _shared.pVisusSharedValue_sNumTypes_get
    if _newclass:sNumTypes = _swig_property(_shared.pVisusSharedValue_sNumTypes_get)
    def numTypes(*args): return _shared.pVisusSharedValue_numTypes(*args)
    def dummySharedValue(*args): return _shared.pVisusSharedValue_dummySharedValue(*args)
    def clone(*args): return _shared.pVisusSharedValue_clone(*args)
    def getName(*args): return _shared.pVisusSharedValue_getName(*args)
    def getIndex(*args): return _shared.pVisusSharedValue_getIndex(*args)
    def inheritsByDefault(*args): return _shared.pVisusSharedValue_inheritsByDefault(*args)
    def lockToRead(*args): return _shared.pVisusSharedValue_lockToRead(*args)
    def unlockAfterRead(*args): return _shared.pVisusSharedValue_unlockAfterRead(*args)
    def lockToWrite(*args): return _shared.pVisusSharedValue_lockToWrite(*args)
    def unlockAfterWrite(*args): return _shared.pVisusSharedValue_unlockAfterWrite(*args)
    def nSteps(*args): return _shared.pVisusSharedValue_nSteps(*args)
    def theSteps(*args): return _shared.pVisusSharedValue_theSteps(*args)
    def syncWithParent(*args): return _shared.pVisusSharedValue_syncWithParent(*args)
    def syncWithChild(*args): return _shared.pVisusSharedValue_syncWithChild(*args)
pVisusSharedValue_swigregister = _shared.pVisusSharedValue_swigregister
pVisusSharedValue_swigregister(pVisusSharedValue)

class VisusSharedBoundingBox(VisusSharedValue,core.VisusBoundingBox):
    __swig_setmethods__ = {}
    for _s in [VisusSharedValue,core.VisusBoundingBox]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, VisusSharedBoundingBox, name, value)
    __swig_getmethods__ = {}
    for _s in [VisusSharedValue,core.VisusBoundingBox]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, VisusSharedBoundingBox, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _shared.new_VisusSharedBoundingBox(*args)
        try: self.this.append(this)
        except: self.this = this
    def nSteps(*args): return _shared.VisusSharedBoundingBox_nSteps(*args)
    def theSteps(*args): return _shared.VisusSharedBoundingBox_theSteps(*args)
    def getString(*args): return _shared.VisusSharedBoundingBox_getString(*args)
    def save(*args): return _shared.VisusSharedBoundingBox_save(*args)
    def syncWithChild(*args): return _shared.VisusSharedBoundingBox_syncWithChild(*args)
    __swig_getmethods__["typeIndex"] = lambda x: _shared.VisusSharedBoundingBox_typeIndex
    if _newclass:typeIndex = staticmethod(_shared.VisusSharedBoundingBox_typeIndex)
    __swig_destroy__ = _shared.delete_VisusSharedBoundingBox
    __del__ = lambda self : None;
VisusSharedBoundingBox_swigregister = _shared.VisusSharedBoundingBox_swigregister
VisusSharedBoundingBox_swigregister(VisusSharedBoundingBox)
cvar = _shared.cvar
VisusSharedBoundingBox.sNumTraversalSteps = _shared.cvar.VisusSharedBoundingBox_sNumTraversalSteps
VisusSharedBoundingBox.sTraversalSteps = _shared.cvar.VisusSharedBoundingBox_sTraversalSteps
VisusSharedBoundingBox_typeIndex = _shared.VisusSharedBoundingBox_typeIndex

class VisusSharedDataRequest(VisusSharedValue,):
    __swig_setmethods__ = {}
    for _s in [VisusSharedValue,]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, VisusSharedDataRequest, name, value)
    __swig_getmethods__ = {}
    for _s in [VisusSharedValue,]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, VisusSharedDataRequest, name)
    def __init__(self): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    __swig_getmethods__["construct"] = lambda x: _shared.VisusSharedDataRequest_construct
    if _newclass:construct = staticmethod(_shared.VisusSharedDataRequest_construct)
    __swig_getmethods__["typeIndex"] = lambda x: _shared.VisusSharedDataRequest_typeIndex
    if _newclass:typeIndex = staticmethod(_shared.VisusSharedDataRequest_typeIndex)
    __swig_destroy__ = _shared.delete_VisusSharedDataRequest
    __del__ = lambda self : None;
VisusSharedDataRequest_swigregister = _shared.VisusSharedDataRequest_swigregister
VisusSharedDataRequest_swigregister(VisusSharedDataRequest)
VisusSharedDataRequest_construct = _shared.VisusSharedDataRequest_construct
VisusSharedDataRequest_typeIndex = _shared.VisusSharedDataRequest_typeIndex

class pVisusSharedDataRequest(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, pVisusSharedDataRequest, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, pVisusSharedDataRequest, name)
    def __init__(self): raise AttributeError, "No constructor defined"
    __repr__ = _swig_repr
    __swig_destroy__ = _shared.delete_pVisusSharedDataRequest
    __del__ = lambda self : None;
    def __eq__(*args): return _shared.pVisusSharedDataRequest___eq__(*args)
    def __ne__(*args): return _shared.pVisusSharedDataRequest___ne__(*args)
    def __ref__(*args): return _shared.pVisusSharedDataRequest___ref__(*args)
    def __deref__(*args): return _shared.pVisusSharedDataRequest___deref__(*args)
    def getString(*args): return _shared.pVisusSharedDataRequest_getString(*args)
    def isEmpty(*args): return _shared.pVisusSharedDataRequest_isEmpty(*args)
    def assign(*args): return _shared.pVisusSharedDataRequest_assign(*args)
    def construct(*args): return _shared.pVisusSharedDataRequest_construct(*args)
    def typeIndex(*args): return _shared.pVisusSharedDataRequest_typeIndex(*args)
    __swig_getmethods__["sNumTypes"] = _shared.pVisusSharedDataRequest_sNumTypes_get
    if _newclass:sNumTypes = _swig_property(_shared.pVisusSharedDataRequest_sNumTypes_get)
    def numTypes(*args): return _shared.pVisusSharedDataRequest_numTypes(*args)
    def dummySharedValue(*args): return _shared.pVisusSharedDataRequest_dummySharedValue(*args)
    def clone(*args): return _shared.pVisusSharedDataRequest_clone(*args)
    def getName(*args): return _shared.pVisusSharedDataRequest_getName(*args)
    def getIndex(*args): return _shared.pVisusSharedDataRequest_getIndex(*args)
    def inheritsByDefault(*args): return _shared.pVisusSharedDataRequest_inheritsByDefault(*args)
    def lockToRead(*args): return _shared.pVisusSharedDataRequest_lockToRead(*args)
    def unlockAfterRead(*args): return _shared.pVisusSharedDataRequest_unlockAfterRead(*args)
    def lockToWrite(*args): return _shared.pVisusSharedDataRequest_lockToWrite(*args)
    def unlockAfterWrite(*args): return _shared.pVisusSharedDataRequest_unlockAfterWrite(*args)
    def nSteps(*args): return _shared.pVisusSharedDataRequest_nSteps(*args)
    def theSteps(*args): return _shared.pVisusSharedDataRequest_theSteps(*args)
    def syncWithParent(*args): return _shared.pVisusSharedDataRequest_syncWithParent(*args)
    def syncWithChild(*args): return _shared.pVisusSharedDataRequest_syncWithChild(*args)
    __swig_setmethods__["XML_TAG"] = _shared.pVisusSharedDataRequest_XML_TAG_set
    __swig_getmethods__["XML_TAG"] = _shared.pVisusSharedDataRequest_XML_TAG_get
    if _newclass:XML_TAG = _swig_property(_shared.pVisusSharedDataRequest_XML_TAG_get, _shared.pVisusSharedDataRequest_XML_TAG_set)
    def transformation(*args): return _shared.pVisusSharedDataRequest_transformation(*args)
    def domainBBox(*args): return _shared.pVisusSharedDataRequest_domainBBox(*args)
    def extent(*args): return _shared.pVisusSharedDataRequest_extent(*args)
    def queryRegion(*args): return _shared.pVisusSharedDataRequest_queryRegion(*args)
    def startStrides(*args): return _shared.pVisusSharedDataRequest_startStrides(*args)
    def endStrides(*args): return _shared.pVisusSharedDataRequest_endStrides(*args)
    def strides(*args): return _shared.pVisusSharedDataRequest_strides(*args)
    def numberOfResolutions(*args): return _shared.pVisusSharedDataRequest_numberOfResolutions(*args)
    def requestType(*args): return _shared.pVisusSharedDataRequest_requestType(*args)
    def setStrides(*args): return _shared.pVisusSharedDataRequest_setStrides(*args)
    def valid(*args): return _shared.pVisusSharedDataRequest_valid(*args)
    def drawBoundingBox(*args): return _shared.pVisusSharedDataRequest_drawBoundingBox(*args)
    def translateToCenter(*args): return _shared.pVisusSharedDataRequest_translateToCenter(*args)
    def translate(*args): return _shared.pVisusSharedDataRequest_translate(*args)
    def shift(*args): return _shared.pVisusSharedDataRequest_shift(*args)
pVisusSharedDataRequest_swigregister = _shared.pVisusSharedDataRequest_swigregister
pVisusSharedDataRequest_swigregister(pVisusSharedDataRequest)

class VisusSharedEarthRadius(VisusSharedValue,core.VisusEarthRadius):
    __swig_setmethods__ = {}
    for _s in [VisusSharedValue,core.VisusEarthRadius]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, VisusSharedEarthRadius, name, value)
    __swig_getmethods__ = {}
    for _s in [VisusSharedValue,core.VisusEarthRadius]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, VisusSharedEarthRadius, name)
    __repr__ = _swig_repr
    __swig_setmethods__["XML_TAG"] = _shared.VisusSharedEarthRadius_XML_TAG_set
    __swig_getmethods__["XML_TAG"] = _shared.VisusSharedEarthRadius_XML_TAG_get
    if _newclass:XML_TAG = _swig_property(_shared.VisusSharedEarthRadius_XML_TAG_get, _shared.VisusSharedEarthRadius_XML_TAG_set)
    def __init__(self, *args): 
        this = _shared.new_VisusSharedEarthRadius(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _shared.delete_VisusSharedEarthRadius
    __del__ = lambda self : None;
    __swig_getmethods__["typeIndex"] = lambda x: _shared.VisusSharedEarthRadius_typeIndex
    if _newclass:typeIndex = staticmethod(_shared.VisusSharedEarthRadius_typeIndex)
VisusSharedEarthRadius_swigregister = _shared.VisusSharedEarthRadius_swigregister
VisusSharedEarthRadius_swigregister(VisusSharedEarthRadius)
VisusSharedEarthRadius_typeIndex = _shared.VisusSharedEarthRadius_typeIndex



