// generated by Fast Light User Interface Designer (fluid) version 2.1000

#include "OrthoSliceMenu.h"

inline void OrthoSliceMenu::cb_Done_i(fltk::Button*, void*) {
  mMenuWindow->destroy();
}
void OrthoSliceMenu::cb_Done(fltk::Button* o, void* v) {
  ((OrthoSliceMenu*)(o->parent()->user_data()))->cb_Done_i(o,v);
}
#include "ColorMapMenuWidget.h"

fltk::Window* OrthoSliceMenu::createWindow() {
  fltk::Window* w;
   {fltk::Window* o = mMenuWindow = new fltk::Window(280, 100, "Orthogonal Slice Menu");
    w = o;
    o->shortcut(0xff1b);
    o->user_data((void*)(this));
    o->tooltip("Set label attributes in this window");
    o->begin();
     {fltk::Button* o = new fltk::Button(86, 62, 113, 28, "Done");
      o->callback((fltk::Callback*)cb_Done);
    }
     {fltk::Group* o = mColorMapWidget = new fltk::Group(120, 5, 150, 50);
      o->labeltype(fltk::EMBOSSED_LABEL);
      o->textsize(11);
    }
     {fltk::Choice* o = new fltk::Choice(5, 25, 100, 25, "Orientation");
      o->align(fltk::ALIGN_TOP|fltk::ALIGN_LEFT);
      fltk::Group::current()->resizable(o);
      o->begin();
      new fltk::Item("XY-Plane");
       {fltk::Item* o = new fltk::Item("XZ-Plane");
        o->set_vertical();
      }
      new fltk::Item("YZ-Plane");
      o->end();
      fltk::Group::current()->resizable(o);
    }
    o->end();
  }
  mColorMapWidget->begin();
  addSubWindow(new ColorMapMenuWidget(mNode,mMenuWindow));
  mColorMapWidget->end();
  return  w;
}

OrthoSliceMenu::OrthoSliceMenu(pVisusOrthogonalSlice slice) : FLTKNodeMenu<pVisusOrthogonalSlice>(slice) {
  createWindow();
  mMenuWindow->show();
}

OrthoSliceMenu::~OrthoSliceMenu() {
  //delete mMenuWindow;
  //delete mTextEditor;
}

bool OrthoSliceMenu::isActive() {
  return mMenuWindow->active();
}
